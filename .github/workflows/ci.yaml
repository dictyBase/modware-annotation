name: Continuous integration
on: 
 push:
   branches:
     - develop
jobs:
  test:
    runs-on: ubuntu-18.04
    services:
      arangodb:
        image: arangodb:3.3.23
        env:
          ARANGO_ROOT_PASSWORD: rootpass
        ports:
          - 8529/tcp
    steps:
      - name: set up golang
        uses: actions/setup-go@v1
        with:
            go-version: 1.11.13
      - name: check out code
        uses: actions/checkout@v1
      - name: unit test
        run: go test -covermode=atomic -coverprofile=profile.cov -v ./...
        env:
          ARANGO_USER: root
          ARANGO_PASS: rootpass
          ARANGO_HOST: localhost
          ARANGO_PORT: ${{ job.services.arangodb.ports[8529] }}
          GOPROXY: https://proxy.golang.org
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v1.0.2
        with:
            file: ./profile.cov
            token: ${{ secrets.CODECOV_TOKEN }}
      - name: upload coverage to codeclimate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_TOKEN }}
          ARANGO_USER: root
          ARANGO_PASS: rootpass
          ARANGO_HOST: localhost
          ARANGO_PORT: ${{ job.services.arangodb.ports[8529] }}
          GOPROXY: https://proxy.golang.org
        run: |
            curl -L -o test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-0.6.3-linux-amd64
            chmod +x test-reporter
            ./test-reporter before-build
            go test -coverprofile c.out ./...
            ./test-reporter after-build --exit-code 0 --debug -p $(go list -m) -t gocov

  build:
    needs: test
    runs-on: ubuntu-18.04
    steps:
      - name: set up golang
        uses: actions/setup-go@v1
        with:
            go-version: 1.11.13
      - name: check out code
        uses: actions/checkout@v1
      - name: build docker image
        run: docker build -t dictybase/modware-annotation:develop-$(git rev-parse --short HEAD) -f build/package/Dockerfile .
      - name: login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: push to docker hub
        run: docker push dictybase/modware-annotation:develop-$(git rev-parse --short HEAD)
